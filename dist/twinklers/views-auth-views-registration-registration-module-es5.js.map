{"version":3,"sources":["src/app/views/auth-views/registration/registration.component.html","src/app/views/auth-views/registration/registration-routing.module.ts","src/app/views/auth-views/registration/registration.component.scss","src/app/views/auth-views/registration/registration.component.ts","src/app/views/auth-views/registration/registration.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"d-flex flex-wrap  justify-content-center align-items-center\\\">\\r\\n    <div class=\\\"card m-t-50\\\" style=\\\"width: 22rem;\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"d-flex flex-wrap  justify-content-center align-items-center\\\">\\r\\n                <p class=\\\"custom\\\">Registration</p>\\r\\n            </div>\\r\\n            <br>\\r\\n            <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"userRegister()\\\">\\r\\n                <div class=\\\"form-group h-px-75\\\">\\r\\n                        <label for=\\\"registerEmail\\\">First name </label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"firstName\\\" required>\\r\\n                        <p class=\\\"error\\\" *ngIf=\\\"isValidField(registerForm, 'firstName')\\\">\\r\\n                            {{getErrorMessage(registerForm, validationMessages, 'firstName')}}\\r\\n                        </p>\\r\\n                </div>\\r\\n                <div class=\\\"form-group h-px-75\\\">\\r\\n                    <label for=\\\"registerEmail\\\"> Last name </label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"lastName\\\" required>\\r\\n                    <p class=\\\"error\\\" *ngIf=\\\"isValidField(registerForm, 'lastName')\\\">\\r\\n                        {{getErrorMessage(registerForm, validationMessages, 'lastName')}}\\r\\n                    </p>\\r\\n                </div>\\r\\n                <div class=\\\"form-group h-px-75\\\">\\r\\n                    <label for=\\\"registerEmail\\\">Email </label>\\r\\n                    <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"registerEmail\\\" formControlName=\\\"email\\\" required>\\r\\n                    <p class=\\\"error\\\" *ngIf=\\\"isValidField(registerForm, 'email')\\\">\\r\\n                        {{getErrorMessage(registerForm, validationMessages, 'email')}}\\r\\n                    </p>\\r\\n                </div>\\r\\n                <div class=\\\"form-group h-px-75\\\">\\r\\n                    <label for=\\\"registerPhonenumber\\\">Phone Number</label>\\r\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"registerPhonenumber\\\" formControlName=\\\"phoneNumber\\\" required>\\r\\n                    <p class=\\\"error\\\" *ngIf=\\\"isValidField(registerForm, 'phoneNumber')\\\">\\r\\n                        {{getErrorMessage(registerForm, validationMessages, 'phoneNumber')}}\\r\\n                    </p>\\r\\n                </div>\\r\\n                <div class=\\\"size\\\" class=\\\"form-group h-px-75\\\" formGroupName=\\\"gender\\\">\\r\\n                    <select class=\\\"custom-select\\\" formControlName=\\\"gender_id\\\" required>\\r\\n                        <option value=\\\"\\\">Select Gender</option>\\r\\n                        <option [value]=\\\"gender.gender_id\\\" *ngFor=\\\"let gender of gendersList\\\">{{gender.name}}</option>\\r\\n                    </select>\\r\\n                    <p class=\\\"error\\\" *ngIf=\\\"isValidField(registerForm.get('gender'), 'gender_id')\\\">\\r\\n                        {{getErrorMessage(registerForm.get('gender'), validationMessages, 'gender_id')}}\\r\\n                    </p>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <label>\\r\\n                        <input type=\\\"checkbox\\\" formControlName=\\\"isTermsAndConditionsAccepted\\\"> I agree with terms & conditions</label>\\r\\n                </div>\\r\\n                <div class=\\\"d-flex justify-content-between\\\">\\r\\n                    <div class=\\\"d-flex justify-content-start\\\">\\r\\n                        <a routerLink=\\\"/my-account/login\\\" class=\\\"btn btn-link \\\">Login</a>\\r\\n                    </div>\\r\\n                    <div class=\\\"d-flex justify-content-end\\\">\\r\\n                        <a [routerLink]=\\\"['/my-account/forgot-password']\\\" class=\\\"btn btn-link\\\">Forgot Password?</a>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"d-flex justify-content-end\\\">\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"registerForm.invalid || !registerForm.get('isTermsAndConditionsAccepted').value\\\">Register</button>\\r\\n                </div>\\r\\n            </form>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { CanActivateService } from './../../../shared/services/guard-services/can-activate.service';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RegistrationComponent } from './registration.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component:RegistrationComponent,\r\n    canActivate: [CanActivateService]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RegistrationRoutingModule { }\r\n","export default \".custom {\\n  font-size: medium;\\n}\\n\\n.mydrop {\\n  width: 100%;\\n  color: black;\\n}\\n\\n.size {\\n  height: 45px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvYXV0aC12aWV3cy9yZWdpc3RyYXRpb24vRDpcXGRyZWFtX3N0YXJ0dXBzXFxzb3J1Y2VfY29kZVxcdHdpbmtsZXJzL3NyY1xcYXBwXFx2aWV3c1xcYXV0aC12aWV3c1xccmVnaXN0cmF0aW9uXFxyZWdpc3RyYXRpb24uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3ZpZXdzL2F1dGgtdmlld3MvcmVnaXN0cmF0aW9uL3JlZ2lzdHJhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlCQUFBO0FDQ0o7O0FERUE7RUFDSSxXQUFBO0VBQ0EsWUFBQTtBQ0NKOztBREVBO0VBQ0ksWUFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvdmlld3MvYXV0aC12aWV3cy9yZWdpc3RyYXRpb24vcmVnaXN0cmF0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmN1c3RvbSB7XHJcbiAgICBmb250LXNpemU6IG1lZGl1bTtcclxufVxyXG5cclxuLm15ZHJvcCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGNvbG9yOiBibGFjaztcclxufVxyXG5cclxuLnNpemUge1xyXG4gICAgaGVpZ2h0OiA0NXB4O1xyXG59IiwiLmN1c3RvbSB7XG4gIGZvbnQtc2l6ZTogbWVkaXVtO1xufVxuXG4ubXlkcm9wIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLnNpemUge1xuICBoZWlnaHQ6IDQ1cHg7XG59Il19 */\"","import { Router } from '@angular/router';\r\nimport { RequestEnums } from './../../../shared/constants/request-enums';\r\nimport { CommonRequestService } from './../../../shared/services/http/common-request.service';\r\nimport { BaseClass } from './../../../shared/services/common/baseClass';\r\nimport { Component, OnInit, Injector } from '@angular/core';\r\nimport Utils from 'src/app/shared/services/common/utils';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { VALIDATION_PATTERNS } from 'src/app/shared/constants/validation-patterns';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.scss']\r\n})\r\nexport class RegistrationComponent extends BaseClass implements OnInit {\r\n  gendersList = [];\r\n  registerForm: FormGroup;\r\n  isTermsAndConditionsAccepted = false;\r\n  validationMessages = {\r\n    firstName: [\r\n      {type: 'required', message: 'First Name is required'}\r\n    ],\r\n    lastName: [\r\n      {type: 'required', message: 'Last Name is required'}\r\n    ],\r\n    email: [\r\n      {type: 'required', message: 'Email is required'},\r\n      { type: 'pattern', message: 'Enter Valid Email Address'}\r\n    ],\r\n    phoneNumber: [\r\n      {type: 'required', message: 'Phone Number is required'},\r\n      { type: 'pattern', message: 'Enter Valid Phone Number'}\r\n\r\n    ],\r\n    gender_id: [\r\n      {type: 'required', message: 'Gender is required'}\r\n    ]\r\n  };\r\n  constructor(\r\n    public injector: Injector,\r\n    private commonRequestService: CommonRequestService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getGenders();\r\n    this.initRegisterForm();\r\n  }\r\n\r\n  private initRegisterForm() {\r\n    this.registerForm = this.formBuilder.group({\r\n      firstName: ['', Validators.compose([Validators.required])],\r\n      lastName: ['', Validators.compose([Validators.required])],\r\n      email: ['', Validators.compose([Validators.required, Validators.pattern(VALIDATION_PATTERNS.EMAIL)])],\r\n      profilePicture: [null],\r\n      phoneNumber: [null, Validators.compose([Validators.required, Validators.pattern(VALIDATION_PATTERNS.PHONE)])],\r\n      role: this.formBuilder.group({\r\n        role_id: 2\r\n      }),\r\n      gender: this.formBuilder.group({\r\n        gender_id: ['', Validators.compose([Validators.required])]\r\n      }),\r\n      addresses: this.formBuilder.array([]),\r\n      isTermsAndConditionsAccepted: [null, Validators.compose([Validators.required])]\r\n    });\r\n  }\r\n  /**\r\n   * Get gender list\r\n   */\r\n  private getGenders() {\r\n    this.commonRequestService.request(RequestEnums.GET_GENDER_LIST).subscribe(res => {\r\n      console.log(res);\r\n      if (res.errors.length > 0) {\r\n        // error\r\n        return;\r\n      } else if (res.status !== 200 || !Utils.isValidInput(res.data)) {\r\n        // error\r\n        return;\r\n      } else {\r\n        // success\r\n        this.gendersList = res.data;\r\n      }\r\n    });\r\n  }\r\n\r\n  userRegister() {\r\n      this.commonRequestService.request(RequestEnums.REGISTER, this.registerForm.value).subscribe(res => {\r\n        console.log(res);\r\n        if (res.errors.length > 0) {\r\n          // error\r\n          return;\r\n        } else if (res.status !== 200 || !Utils.isValidInput(res.data)) {\r\n          // error\r\n          return;\r\n        } else {\r\n          // success\r\n          alert('You have registered Successfully');\r\n          this.router.navigate(['my-account', 'login']);\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { RegistrationRoutingModule } from './registration-routing.module';\r\nimport { RegistrationComponent } from './registration.component';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [RegistrationComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RegistrationRoutingModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class RegistrationModule { }\r\n"],"sourceRoot":"webpack:///","file":"views-auth-views-registration-registration-module-es5.js"}