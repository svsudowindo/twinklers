{"version":3,"sources":["./src/app/views/admin-views/admin-dashboard/admin-dashboard.component.html","./src/app/shared/constants/app-properties.ts","./src/app/shared/constants/errors.ts","./src/app/shared/constants/gloabal-variable-enums.ts","./src/app/shared/constants/request-enums.ts","./src/app/shared/services/common/globalVariables.ts","./src/app/shared/services/http/common-http.service.ts","./src/app/shared/services/http/common-request.service.ts","./src/app/shared/services/http/frame-url.service.ts","./src/app/views/admin-views/admin-dashboard/admin-dashboard-routing.module.ts","./src/app/views/admin-views/admin-dashboard/admin-dashboard.component.scss","./src/app/views/admin-views/admin-dashboard/admin-dashboard.component.ts","./src/app/views/admin-views/admin-dashboard/admin-dashboard.module.ts"],"names":[],"mappings":"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","file":"views-admin-views-admin-dashboard-admin-dashboard-module-es2015.js","sourcesContent":["export default \"<!-- <div>\\r\\n    <button class=\\\"btn btn-primary\\\" routerLink=\\\"/admin/category-list\\\">Category list</button>\\r\\n    <button class=\\\"btn btn-primary\\\" routerLink=\\\"/admin/products-list\\\">Products list</button>\\r\\n</div> -->\\r\\n\\r\\n<div class=\\\"d-flex justify-content-center w-100 flex-wrap\\\">\\r\\n    <ng-container *ngFor=\\\"let dashboardItem of dashboardData; let i = index\\\">\\r\\n    <div class=\\\"card m-r-15 m-b-15\\\" style=\\\"width: 30rem;height: 150px;border-radius: 20px;margin-top: 10px;\\\" (click)=\\\"navigateToDashboardItem(dashboardItem)\\\">\\r\\n        <div class=\\\"card-body color{{i}} pointer\\\">\\r\\n            <div class=\\\"d-flex justify-content-center heading\\\">\\r\\n                {{dashboardItem.label}}\\r\\n            </div>\\r\\n            <div class=\\\"d-flex justify-content-start stats\\\">\\r\\n                    Active: {{dashboardResponse && dashboardResponse[dashboardItem.key + '_active']}}\\r\\n            </div>\\r\\n            <div class=\\\"d-flex justify-content-end stats\\\">\\r\\n                Inactive: {{dashboardResponse && dashboardResponse[dashboardItem.key + '_active']}}\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-container>\\r\\n</div>\"","export const PROPERTIES = {\r\n    // Counts to retry the remote service if fails\r\n    RETRY_SERVICE_COUNT: 0\r\n};\r\n\r\n","export const errors = {\r\n    404: {\r\n        message: 'Not Found'\r\n    },\r\n    0: {\r\n        message: 'Unknown Error'\r\n    },\r\n    'default': {\r\n        message: 'Something went wrong. Unable to find the issue'\r\n    }\r\n};\r\n","export enum GlobalVariableEnums {\r\n    TOKEN = 'token'\r\n}\r\n\r\nexport const STATUS = [\r\n    {\r\n        id: 'ACTIVE',\r\n        value: true,\r\n        label: 'ACTIVE'\r\n    },\r\n    {\r\n        id: 'INACTIVE',\r\n        value: false,\r\n        label: 'INACTIVE'\r\n    }\r\n];\r\n\r\nexport const POPUP_RESPONSE = {\r\n    SUCCESS: 'success',\r\n    CANCEL: 'cancel'\r\n}","export const RequestEnums = {\r\n    REGISTER: {\r\n        type: 'POST',\r\n        path: '/auth/register',\r\n        keys: [],\r\n        values: []\r\n    },\r\n    GET_GENDER_LIST: {\r\n        type: 'GET',\r\n        path: '/auth/genders-list',\r\n        keys: [],\r\n        values: []\r\n    },\r\n    LOGIN: {\r\n        type: 'POST',\r\n        path: '/auth/login',\r\n        keys: [],\r\n        values: []\r\n    },\r\n    UPDATE_USER_PROFILE: {\r\n        type: 'POST',\r\n        path: '/common/update-profile',\r\n        keys: [],\r\n        values: []\r\n    },\r\n    UPLOAD_IMAGE_GET_URL: {\r\n        type: 'POST',\r\n        path: '/common/image-uploader',\r\n        keys: [],\r\n        values: []\r\n    },\r\n    CREATE_CATEGORY: {\r\n        type: 'POST',\r\n        path: '/admin/modify-category',\r\n        keys: [],\r\n        values: []\r\n    },\r\n    GET_CATEGORY_LIST: {\r\n        type: 'GET',\r\n        path: '/common/get-categories',\r\n        keys: [],\r\n        values: []\r\n    },\r\n    GET_DASHBOARD_DATA: {\r\n        type: 'GET',\r\n        path: '/admin/get-admin-dashboard',\r\n        keys: [],\r\n        values: []\r\n    }\r\n};\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport Utils from './utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlobalVariables {\r\n\r\n  private paramsData: any = {};\r\n  private retainParamValue = false;\r\n\r\n  constructor() { }\r\n\r\n  // returns the data based on the key passed\r\n  // @key => object key from global variable enums\r\n  public getParameterData(key) {\r\n    if (!Utils.isUndefined(this.paramsData) && !Utils.isNull(this.paramsData)) {\r\n      if (this.paramsData.hasOwnProperty(key)) {\r\n        const output = this.paramsData[key];\r\n        if (this.retainParamValue === false) {\r\n          this.setParameterData(key, null);\r\n        }\r\n        return output;\r\n      } else {\r\n        return null;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // single time set method\r\n  // @key => object key from global variable enums\r\n  // @input => any data value either an object or a value\r\n  // @retainvalue => weather the data should present or not\r\n  public setParameterData(key, input, retainValue = true) {\r\n    this.paramsData[key] = input;\r\n    this.retainParamValue = retainValue;\r\n    console.log(this.paramsData);\r\n  }\r\n}\r\n","// Angular Modules\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { map, catchError, retry } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\nimport { PROPERTIES } from '../../constants/app-properties';\r\nimport { errors } from '../../constants/errors';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Custom Enums\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CommonHttpService {\r\n\r\n    constructor(private _http: HttpClient) { }\r\n\r\n    // @method get\r\n    // @params HttpParams if needed\r\n    // @path Request URL\r\n    private get(path, requestOptions): Observable<any> {\r\n        return this._http.get(path, requestOptions).pipe(\r\n            map(res => {\r\n                return res;\r\n            }),\r\n            catchError(this.errorHandler), // Catch Errors if service fails\r\n            retry(PROPERTIES.RETRY_SERVICE_COUNT) // if you want to retry the request. Please mention the retry count value\r\n        );\r\n    }\r\n    // Utility method for Create.\r\n    // @method post\r\n    // @param path\r\n    // @param body\r\n    private put(path: string, body: Object = {}, requestOptions): Observable<any> {\r\n        return this._http.put(\r\n            path, body, requestOptions).pipe(\r\n                map(res => {\r\n                    return res;\r\n                }),\r\n                catchError(this.errorHandler)\r\n            );\r\n    }\r\n    // Utility method for Create.\r\n    // @method post\r\n    // @param path\r\n    // @param body\r\n    private post(path: string, body: Object = {}, requestOptions): Observable<any> {\r\n        return this._http.post(\r\n            path, body, requestOptions).pipe(\r\n                map(res => {\r\n                    return res;\r\n                }),\r\n                catchError(this.errorHandler)\r\n            );\r\n    }\r\n\r\n\r\n    // Utility method for Create.\r\n    // @method patch\r\n    // @param path\r\n    // @param body\r\n    // @param customHeaders\r\n    private patch(path: string, body: Object = {}, requestOptions): Observable<any> {\r\n        return this._http.patch(\r\n            path, body, requestOptions).pipe(\r\n                map(res => {\r\n                    return res;\r\n                }),\r\n                catchError(this.errorHandler)\r\n            );\r\n    }\r\n\r\n    // Utility method for Create.\r\n    // @method delete\r\n    // @param path\r\n    // @param customHeaders\r\n    private delete(path: string, requestOptions): Observable<any> {\r\n        return this._http.delete(\r\n            path, requestOptions).pipe(\r\n                map(res => {\r\n                    return res;\r\n                }),\r\n                catchError(this.errorHandler)\r\n            );\r\n    }\r\n\r\n    // Please add errors and error codes in errors.json.ts file\r\n    private errorHandler(error: HttpErrorResponse) {\r\n        // To know weather the error is from Client or server error\r\n        if (error.error instanceof ErrorEvent) {\r\n            console.log('Client side error. Please check the request and body');\r\n        } else {\r\n            console.log('Server Error. Please check the error from server side');\r\n        }\r\n        // get's error message from errors.json.ts\r\n        let errorMessage = errors['default'].message;\r\n        if (errors.hasOwnProperty(error.status)) {\r\n            errorMessage = errors[error.status].message;\r\n        }\r\n        return throwError(errorMessage);\r\n    }\r\n\r\n    // To execute any Http service request\r\n    public sendReciveService(\r\n        requestObj: any,\r\n        body = {},\r\n        params: HttpParams = new HttpParams(),\r\n        customHeaders?: HttpHeaders): Observable<any> {\r\n        const requestOptions = {};\r\n        requestOptions['headers'] = customHeaders ? customHeaders : {};\r\n        requestOptions['params'] = params;\r\n        switch (requestObj.type) {\r\n            case 'GET': {\r\n                return this.get(requestObj.path, requestOptions);\r\n            }\r\n            case 'POST': {\r\n                return this.post(requestObj.path, body, requestOptions);\r\n            }\r\n            case 'PUT': {\r\n                return this.put(requestObj.path, body, requestOptions);\r\n            }\r\n            case 'PATCH': {\r\n                return this.patch(requestObj.path, body, requestOptions);\r\n            }\r\n            case 'DELETE': {\r\n                return this.delete(requestObj.path, requestOptions);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CommonHttpService } from './common-http.service';\r\nimport { FrameURLService } from './frame-url.service';\r\nimport { Observable } from 'rxjs';\r\nimport Utils from '../common/utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommonRequestService {\r\n\r\n  constructor(\r\n    private frameUrlService: FrameURLService,\r\n    private commonHttpService: CommonHttpService\r\n    ) { }\r\n\r\n  request(requestObject, postBody = null, httpParams = null, customHeaders = null): Observable<any> {\r\n    return this.mainRequest(Utils.avoidShallowClone(requestObject), postBody, httpParams, customHeaders);\r\n  }\r\n  private mainRequest(requestObject, postBody = null, httpParams = null, customHeaders = null): Observable<any> {\r\n    requestObject.path = this.frameUrlService.getHttpFramedURL(requestObject);\r\n    return this.commonHttpService.sendReciveService(requestObject, postBody, httpParams, customHeaders);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { GlobalVariables } from '../common/globalVariables';\r\nimport { GlobalVariableEnums } from '../../constants/gloabal-variable-enums';\r\nimport { environment } from '../../../../environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FrameURLService {\r\n    constructor(private _globalVariables: GlobalVariables) { }\r\n\r\n    // Return the Exact path to be sent\r\n    public getHttpFramedURL(requestObj: any) {\r\n        const URL = environment.BASE_URL + requestObj.path;\r\n        let path = URL.replace('token', this._globalVariables.getParameterData(GlobalVariableEnums.TOKEN));\r\n        if (requestObj.keys.length > 0 && requestObj.values.length > 0) {\r\n            for (let i = 0; i < requestObj.keys.length; i++) {\r\n                // Replaces the word which starts with colon only. which indicates run time value\r\n                path = path.replace(':' + requestObj.keys[i], requestObj.values[i]);\r\n            }\r\n        }\r\n        return path;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AdminDashboardComponent } from './admin-dashboard.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: AdminDashboardComponent\r\n      },\r\n      {\r\n        path: 'category-list',\r\n        loadChildren: () => import('../category-list/category-list.module').then(m => m.CategoryListModule)\r\n      },\r\n      {\r\n        path: 'products-list',\r\n        loadChildren: () => import('../admin-products-list/admin-products-list.module').then(m => m.AdminProductsListModule)\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdminDashboardRoutingModule { }\r\n","export default \".heading {\\n  font-size: 24px;\\n  color: darkblue;\\n  font-weight: 500;\\n}\\n\\n.stats {\\n  font-size: 20px;\\n  font-weight: 500;\\n  color: saddlebrown;\\n}\\n\\n.card-body {\\n  border-radius: 20px;\\n}\\n\\n.card-body.color0 {\\n  background-color: lightcyan !important;\\n}\\n\\n.card-body.color1 {\\n  background-color: blanchedalmond !important;\\n}\\n\\n.card-body.color2 {\\n  background-color: #8eb397ab !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvYWRtaW4tdmlld3MvYWRtaW4tZGFzaGJvYXJkL0Q6XFxkcmVhbV9zdGFydHVwc1xcc29ydWNlX2NvZGVcXHR3aW5rbGVycy9zcmNcXGFwcFxcdmlld3NcXGFkbWluLXZpZXdzXFxhZG1pbi1kYXNoYm9hcmRcXGFkbWluLWRhc2hib2FyZC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvdmlld3MvYWRtaW4tdmlld3MvYWRtaW4tZGFzaGJvYXJkL2FkbWluLWRhc2hib2FyZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGVBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7QUNDSjs7QURFQTtFQUNJLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0FDQ0o7O0FEQ0E7RUFDSSxtQkFBQTtBQ0VKOztBREFBO0VBQ0ksc0NBQUE7QUNHSjs7QURBQTtFQUNJLDJDQUFBO0FDR0o7O0FEQUE7RUFDSSxzQ0FBQTtBQ0dKIiwiZmlsZSI6InNyYy9hcHAvdmlld3MvYWRtaW4tdmlld3MvYWRtaW4tZGFzaGJvYXJkL2FkbWluLWRhc2hib2FyZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oZWFkaW5nIHtcclxuICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICAgIGNvbG9yOiBkYXJrYmx1ZTtcclxuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbn1cclxuXHJcbi5zdGF0cyB7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgY29sb3I6IHNhZGRsZWJyb3duXHJcbn1cclxuLmNhcmQtYm9keSB7XHJcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xyXG59XHJcbi5jYXJkLWJvZHkuY29sb3IwIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Y3lhbiAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4uY2FyZC1ib2R5LmNvbG9yMSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFuY2hlZGFsbW9uZCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4uY2FyZC1ib2R5LmNvbG9yMiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOGViMzk3YWIgIWltcG9ydGFudDtcclxufVxyXG4iLCIuaGVhZGluZyB7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgY29sb3I6IGRhcmtibHVlO1xuICBmb250LXdlaWdodDogNTAwO1xufVxuXG4uc3RhdHMge1xuICBmb250LXNpemU6IDIwcHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGNvbG9yOiBzYWRkbGVicm93bjtcbn1cblxuLmNhcmQtYm9keSB7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XG59XG5cbi5jYXJkLWJvZHkuY29sb3IwIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRjeWFuICFpbXBvcnRhbnQ7XG59XG5cbi5jYXJkLWJvZHkuY29sb3IxIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhbmNoZWRhbG1vbmQgIWltcG9ydGFudDtcbn1cblxuLmNhcmQtYm9keS5jb2xvcjIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjOGViMzk3YWIgIWltcG9ydGFudDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { RequestEnums } from 'src/app/shared/constants/request-enums';\r\nimport Utils from 'src/app/shared/services/common/utils';\r\nimport { CommonRequestService } from 'src/app/shared/services/http/common-request.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-dashboard',\r\n  templateUrl: './admin-dashboard.component.html',\r\n  styleUrls: ['./admin-dashboard.component.scss']\r\n})\r\nexport class AdminDashboardComponent implements OnInit {\r\n\r\n  dashboardData = [\r\n    {\r\n      label: 'Categories',\r\n      key: 'category',\r\n      route: 'category-list'\r\n    },\r\n    {\r\n      label: 'Products',\r\n      key: 'products',\r\n      route: 'products-list'\r\n    },\r\n    {\r\n      label: 'Users',\r\n      key: 'users',\r\n      route: ''\r\n    }\r\n  ];\r\n  dashboardResponse: any;\r\n  constructor(\r\n    private commonRequestService: CommonRequestService,\r\n    private router: Router\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n    this.getDashboardInfo()\r\n  }\r\n  getDashboardInfo() {\r\n    this.commonRequestService.request(RequestEnums.GET_DASHBOARD_DATA).subscribe(res => {\r\n      if (res.status === 200 && Utils.isValidInput(res.data)) {\r\n        this.dashboardResponse = res.data;\r\n      } else {\r\n        alert('Something went wrong');\r\n      }\r\n    })\r\n  }\r\n\r\n  navigateToDashboardItem(dashboradData) {\r\n    this.router.navigate(['admin', dashboradData.route])\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AdminDashboardRoutingModule } from './admin-dashboard-routing.module';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { AdminDashboardComponent } from './admin-dashboard.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AdminDashboardComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AdminDashboardRoutingModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class AdminDashboardModule { }\r\n"],"sourceRoot":"webpack:///"}