{"version":3,"sources":["src/app/views/user-views/user-management/profile/profile.component.html","src/app/views/user-views/user-management/profile/profile-routing.module.ts","src/app/views/user-views/user-management/profile/profile.component.scss","src/app/views/user-views/user-management/profile/profile.component.ts","src/app/views/user-views/user-management/profile/profile.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,ujHAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,QAAM,MAAM,GAAW,CACrB;AACE,MAAA,IAAI,EAAE,EADR;AAEE,MAAA,SAAS,EAAE,+CAAA,CAAA,kBAAA;AAFb,KADqB,CAAvB;;AAWA,QAAa,oBAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,oBAAoB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJhC,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,MAAtB,CAAD,CADD;AAER,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAD;AAFD,KAAT,CAIgC,CAAA,EAApB,oBAAoB,CAApB;;;;;;;;;;;;;;;;AChBb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,g5BAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACgBf,QAAa,gBAAb;AAAA;AAAA;AAAA;;AA0BE,gCACU,oBADV,EAEU,WAFV,EAGU,aAHV,EAGsC;AAAA;;AAAA;;AAEpC;AAJQ,cAAA,oBAAA,GAAA,oBAAA;AACA,cAAA,WAAA,GAAA,WAAA;AACA,cAAA,aAAA,GAAA,aAAA;AA5BV,cAAA,WAAA,GAAc,EAAd;AAGA,cAAA,kBAAA,GAAqB;AACnB,UAAA,SAAS,EAAE,CACT;AAAC,YAAA,IAAI,EAAE,UAAP;AAAmB,YAAA,OAAO,EAAE;AAA5B,WADS,CADQ;AAInB,UAAA,QAAQ,EAAE,CACR;AAAC,YAAA,IAAI,EAAE,UAAP;AAAmB,YAAA,OAAO,EAAE;AAA5B,WADQ,CAJS;AAOnB,UAAA,KAAK,EAAE,CACL;AAAC,YAAA,IAAI,EAAE,UAAP;AAAmB,YAAA,OAAO,EAAE;AAA5B,WADK,EAEL;AAAE,YAAA,IAAI,EAAE,SAAR;AAAmB,YAAA,OAAO,EAAE;AAA5B,WAFK,CAPY;AAWnB,UAAA,WAAW,EAAE,CACX;AAAC,YAAA,IAAI,EAAE,UAAP;AAAmB,YAAA,OAAO,EAAE;AAA5B,WADW,EAEX;AAAE,YAAA,IAAI,EAAE,SAAR;AAAmB,YAAA,OAAO,EAAE;AAA5B,WAFW,CAXM;AAgBnB,UAAA,SAAS,EAAE,CACT;AAAC,YAAA,IAAI,EAAE,UAAP;AAAmB,YAAA,OAAO,EAAE;AAA5B,WADS;AAhBQ,SAArB;AAqBA,cAAA,YAAA,GAAe,4CAAf;;AAOE,cAAK,aAAL,CAAmB,cAAnB;;AACA,cAAK,QAAL,GAAgB,MAAK,aAAL,CAAmB,WAAnB,EAAhB;AAJoC;AAKrC;;AAlCH;AAAA;AAAA,mCAoCU;AACN,eAAK,UAAL;AACA,eAAK,eAAL;AACD;AAvCH;AAAA;AAAA,0CAyCiB;AACb,eAAK,WAAL,GAAmB,KAAK,WAAL,CAAiB,KAAjB,CAAuB;AACxC,YAAA,GAAG,EAAE,CAAC,IAAD,CADmC;AAExC,YAAA,SAAS,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAnB,CAAL,CAF6B;AAGxC,YAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAnB,CAAL,CAH8B;AAIxC,YAAA,KAAK,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAsB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,kEAAA,CAAA,qBAAA,CAAA,CAAoB,KAAvC,CAAtB,CAAnB,CAAL,CAJiC;AAKxC,YAAA,cAAc,EAAE,CAAC,IAAD,CALwB;AAMxC,YAAA,WAAW,EAAE,CAAC,IAAD,EAAO,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAsB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,kEAAA,CAAA,qBAAA,CAAA,CAAoB,KAAvC,CAAtB,CAAnB,CAAP,CAN2B;AAOxC,YAAA,IAAI,EAAE,KAAK,WAAL,CAAiB,KAAjB,CAAuB;AAC3B,cAAA,OAAO,EAAE;AADkB,aAAvB,CAPkC;AAUxC,YAAA,MAAM,EAAE,KAAK,WAAL,CAAiB,KAAjB,CAAuB;AAC7B,cAAA,SAAS,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAnB,CAAL;AADkB,aAAvB,CAVgC;AAaxC,YAAA,SAAS,EAAE,KAAK,WAAL,CAAiB,KAAjB,CAAuB,EAAvB;AAb6B,WAAvB,CAAnB;AAeA,eAAK,eAAL;AACD;AA1DH;AAAA;AAAA,0CA2DiB;AACb,eAAK,WAAL,CAAiB,UAAjB,CAA4B,KAAK,QAAjC;AACA,eAAK,YAAL,GAAoB,KAAK,QAAL,CAAc,cAAlC;AACD;AACD;;;;AA/DF;AAAA;AAAA,qCAkEoB;AAAA;;AAChB,eAAK,oBAAL,CAA0B,OAA1B,CAAkC,4DAAA,CAAA,cAAA,CAAA,CAAa,eAA/C,EAAgE,SAAhE,CAA0E,UAAA,GAAG,EAAG;AAC9E,gBAAI,GAAG,CAAC,MAAJ,CAAW,MAAX,GAAoB,CAAxB,EAA2B;AACzB;AACA;AACD,aAHD,MAGO,IAAI,GAAG,CAAC,MAAJ,KAAe,GAAf,IAAsB,CAAC,iEAAA,CAAA,SAAA,CAAA,CAAM,YAAN,CAAmB,GAAG,CAAC,IAAvB,CAA3B,EAAyD;AAC9D;AACA;AACD,aAHM,MAGA;AACL;AACA,cAAA,MAAI,CAAC,WAAL,GAAmB,GAAG,CAAC,IAAvB;AACD;AACF,WAXD;AAYD;AA/EH;AAAA;AAAA,4CAiFmB;AAAA;;AACf,eAAK,oBAAL,CAA0B,OAA1B,CAAkC,4DAAA,CAAA,cAAA,CAAA,CAAa,mBAA/C,EAAoE,KAAK,WAAL,CAAiB,KAArF,EAA4F,SAA5F,CAAsG,UAAA,GAAG,EAAG;AAC1G,gBAAI,GAAG,CAAC,MAAJ,CAAW,MAAX,GAAoB,CAAxB,EAA2B;AACzB;AACA;AACD,aAHD,MAGO,IAAI,GAAG,CAAC,MAAJ,KAAe,GAAf,IAAsB,CAAC,iEAAA,CAAA,SAAA,CAAA,CAAM,YAAN,CAAmB,GAAG,CAAC,IAAvB,CAA3B,EAAyD;AAC9D;AACA;AACD,aAHM,MAGA;AACL;AACA,cAAA,MAAI,CAAC,aAAL,CAAmB,WAAnB,CAA+B,GAAG,CAAC,IAAnC;AACD;AACF,WAXD;AAYD;AA9FH;AAAA;AAAA,sCAgGgB,EAhGhB,EAgGkB;AAAA;;AACd,UAAA,OAAO,CAAC,GAAR,CAAY,EAAE,CAAC,MAAH,CAAU,KAAtB;AACA,cAAM,QAAQ,GAAG,IAAI,QAAJ,EAAjB;AACA,cAAM,KAAK,GAAG,EAAE,CAAC,MAAH,CAAU,KAAxB,CAHc,CAId;;AACA,eAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,MAA1B,EAAkC,CAAC,EAAnC,EAAuC;AACrC,YAAA,QAAQ,CAAC,MAAT,CAAgB,OAAhB,EAAyB,KAAK,CAAC,CAAD,CAA9B,EAAmC,KAAK,CAAC,CAAD,CAAL,CAAS,IAA5C;AACD;;AACD,cAAM,OAAO,GAAG,IAAI,iDAAA,CAAA,aAAA,CAAJ,CAAgB;AAAC,4BAAe;AAAhB,WAAhB,CAAhB;AACA,eAAK,oBAAL,CAA0B,OAA1B,CAAkC,4DAAA,CAAA,cAAA,CAAA,CAAa,oBAA/C,EAAqE,QAArE,EAA+E,IAA/E,EAAqF,OAArF,EAA8F,SAA9F,CAAwG,UAAA,GAAG,EAAG;AAC5G,gBAAI,GAAG,CAAC,MAAJ,CAAW,MAAX,GAAoB,CAAxB,EAA2B;AACzB;AACA;AACD,aAHD,MAGO,IAAI,GAAG,CAAC,MAAJ,KAAe,GAAf,IAAsB,CAAC,iEAAA,CAAA,SAAA,CAAA,CAAM,YAAN,CAAmB,GAAG,CAAC,IAAvB,CAA3B,EAAyD;AAC9D;AACA;AACD,aAHM,MAGA;AACL;AACA,cAAA,KAAK,CAAC,sBAAD,CAAL;AACA,cAAA,MAAI,CAAC,YAAL,GAAoB,GAAG,CAAC,IAAJ,CAAS,OAA7B;;AACA,cAAA,MAAI,CAAC,WAAL,CAAiB,GAAjB,CAAqB,gBAArB,EAAuC,QAAvC,CAAgD,MAAI,CAAC,YAArD;;AACA,cAAA,MAAI,CAAC,iBAAL;AACD;AACF,WAdD;AAeD;AAxHH;AAAA;AAAA,mCA0HU;AACN,UAAA,OAAO,CAAC,GAAR,CAAY,WAAZ;AACA,eAAK,YAAL,GAAoB,4CAApB;AACD;AA7HH;;AAAA;AAAA,MAAsC,8DAAA,CAAA,WAAA,CAAtC,CAAA;;;;cA2BkC,yEAAA,CAAA,sBAAA;;cACT,2CAAA,CAAA,aAAA;;cACE,mEAAA,CAAA,eAAA;;;;AA7Bd,IAAA,gBAAgB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL5B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,aADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,uHAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK4B,CAAA,EAAhB,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb,QAAa,aAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,aAAa,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CARzB,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,YAAY,EAAE,CAAC,+CAAA,CAAA,kBAAA,CAAD,CADN;AAER,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,EAEP,oDAAA,CAAA,sBAAA,CAFO,EAGP,yDAAA,CAAA,cAAA,CAHO;AAFD,KAAT,CAQyB,CAAA,EAAb,aAAa,CAAb","sourcesContent":["export default \"<div class=\\\"d-flex flex-wrap  justify-content-center align-items-center\\\">\\r\\n    <div class=\\\"card m-t-50\\\" style=\\\"width: 22rem;\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"d-flex justify-content-center\\\">\\r\\n                <div>\\r\\n                    <input type=\\\"file\\\" id=\\\"img\\\" hidden (change)=\\\"profileChange($event)\\\" accept=\\\".png, .jpg, .jpeg\\\" multiple>\\r\\n                    <label for=\\\"img\\\">\\r\\n                        <img [src]=\\\"profileImage\\\" class=\\\"img\\\" (error)=\\\"imgError()\\\"/>\\r\\n                    </label>\\r\\n                </div>\\r\\n            </div>\\r\\n            <br>\\r\\n            <form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"updateUserProfile()\\\">\\r\\n                <div class=\\\"form-group h-px-75\\\">\\r\\n                        <label for=\\\"registerEmail\\\">First name </label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"firstName\\\" required>\\r\\n                        <p class=\\\"error\\\" *ngIf=\\\"isValidField(profileForm, 'firstName')\\\">\\r\\n                            {{getErrorMessage(profileForm, validationMessages, 'firstName')}}\\r\\n                        </p>\\r\\n                </div>\\r\\n                <div class=\\\"form-group h-px-75\\\">\\r\\n                    <label for=\\\"registerEmail\\\"> Last name </label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"lastName\\\" required>\\r\\n                    <p class=\\\"error\\\" *ngIf=\\\"isValidField(profileForm, 'lastName')\\\">\\r\\n                        {{getErrorMessage(profileForm, validationMessages, 'lastName')}}\\r\\n                    </p>\\r\\n                </div>\\r\\n                <div class=\\\"form-group h-px-75\\\">\\r\\n                    <label for=\\\"registerEmail\\\">Email </label>\\r\\n                    <input type=\\\"email\\\" class=\\\"form-control\\\" readonly id=\\\"registerEmail\\\" formControlName=\\\"email\\\" required>\\r\\n                    <p class=\\\"error\\\" *ngIf=\\\"isValidField(profileForm, 'email')\\\">\\r\\n                        {{getErrorMessage(profileForm, validationMessages, 'email')}}\\r\\n                    </p>\\r\\n                </div>\\r\\n                <div class=\\\"form-group h-px-75\\\">\\r\\n                    <label for=\\\"registerPhonenumber\\\">Phone Number</label>\\r\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"registerPhonenumber\\\" formControlName=\\\"phoneNumber\\\" required>\\r\\n                    <p class=\\\"error\\\" *ngIf=\\\"isValidField(profileForm, 'phoneNumber')\\\">\\r\\n                        {{getErrorMessage(profileForm, validationMessages, 'phoneNumber')}}\\r\\n                    </p>\\r\\n                </div>\\r\\n                <div class=\\\"size\\\" class=\\\"form-group h-px-75\\\" formGroupName=\\\"gender\\\">\\r\\n                    <select class=\\\"custom-select\\\" formControlName=\\\"gender_id\\\" required>\\r\\n                        <option value=\\\"\\\">Select Gender</option>\\r\\n                        <option [value]=\\\"gender.gender_id\\\" *ngFor=\\\"let gender of gendersList\\\">{{gender.name}}</option>\\r\\n                    </select>\\r\\n                    <p class=\\\"error\\\" *ngIf=\\\"isValidField(profileForm.get('gender'), 'gender_id')\\\">\\r\\n                        {{getErrorMessage(profileForm.get('gender'), validationMessages, 'gender_id')}}\\r\\n                    </p>\\r\\n                </div>\\r\\n                <div class=\\\"d-flex justify-content-end\\\">\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"profileForm.invalid\\\">Update</button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { ProfileComponent } from './profile.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProfileComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProfileRoutingModule { }\r\n","export default \".img {\\n  width: 150px;\\n  height: 150px;\\n  border-radius: 50%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvdXNlci12aWV3cy91c2VyLW1hbmFnZW1lbnQvcHJvZmlsZS9EOlxcZHJlYW1fc3RhcnR1cHNcXHNvcnVjZV9jb2RlXFx0d2lua2xlcnMvc3JjXFxhcHBcXHZpZXdzXFx1c2VyLXZpZXdzXFx1c2VyLW1hbmFnZW1lbnRcXHByb2ZpbGVcXHByb2ZpbGUuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3ZpZXdzL3VzZXItdmlld3MvdXNlci1tYW5hZ2VtZW50L3Byb2ZpbGUvcHJvZmlsZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQUE7RUFDQSxhQUFBO0VBQ0Esa0JBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3VzZXItdmlld3MvdXNlci1tYW5hZ2VtZW50L3Byb2ZpbGUvcHJvZmlsZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pbWcge1xyXG4gICAgd2lkdGg6IDE1MHB4O1xyXG4gICAgaGVpZ2h0OiAxNTBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxufSIsIi5pbWcge1xuICB3aWR0aDogMTUwcHg7XG4gIGhlaWdodDogMTUwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbn0iXX0= */\"","import { HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { BaseClass } from './../../../../shared/services/common/baseClass';\r\nimport { CommonService } from './../../../../shared/services/common/common.service';\r\nimport { VALIDATION_PATTERNS } from './../../../../shared/constants/validation-patterns';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { RequestEnums } from './../../../../shared/constants/request-enums';\r\nimport { CommonRequestService } from './../../../../shared/services/http/common-request.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport Utils from 'src/app/shared/services/common/utils';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent extends BaseClass implements OnInit {\r\n  gendersList = [];\r\n  profileForm: FormGroup;\r\n\r\n  validationMessages = {\r\n    firstName: [\r\n      {type: 'required', message: 'First Name is required'}\r\n    ],\r\n    lastName: [\r\n      {type: 'required', message: 'Last Name is required'}\r\n    ],\r\n    email: [\r\n      {type: 'required', message: 'Email is required'},\r\n      { type: 'pattern', message: 'Enter Valid Email Address'}\r\n    ],\r\n    phoneNumber: [\r\n      {type: 'required', message: 'Phone Number is required'},\r\n      { type: 'pattern', message: 'Enter Valid Phone Number'}\r\n\r\n    ],\r\n    gender_id: [\r\n      {type: 'required', message: 'Gender is required'}\r\n    ]\r\n  };\r\n  userInfo: any;\r\n  profileImage = '/assets/images/profile/default-profile.jpg';\r\n  constructor(\r\n    private commonRequestService: CommonRequestService,\r\n    private formBuilder: FormBuilder,\r\n    private commonService: CommonService\r\n    ) {\r\n    super();\r\n    this.commonService.checkAndLogout();\r\n    this.userInfo = this.commonService.getUserInfo();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getGenders();\r\n    this.initProfileForm();\r\n  }\r\n\r\n  initProfileForm() {\r\n    this.profileForm = this.formBuilder.group({\r\n      _id: [null],\r\n      firstName: ['', Validators.compose([Validators.required])],\r\n      lastName: ['', Validators.compose([Validators.required])],\r\n      email: ['', Validators.compose([Validators.required, Validators.pattern(VALIDATION_PATTERNS.EMAIL)])],\r\n      profilePicture: [null],\r\n      phoneNumber: [null, Validators.compose([Validators.required, Validators.pattern(VALIDATION_PATTERNS.PHONE)])],\r\n      role: this.formBuilder.group({\r\n        role_id: 2\r\n      }),\r\n      gender: this.formBuilder.group({\r\n        gender_id: ['', Validators.compose([Validators.required])]\r\n      }),\r\n      addresses: this.formBuilder.array([])\r\n    });\r\n    this.prefillUserInfo();\r\n  }\r\n  prefillUserInfo() {\r\n    this.profileForm.patchValue(this.userInfo);\r\n    this.profileImage = this.userInfo.profilePicture;\r\n  }\r\n  /**\r\n   * Get gender list\r\n   */\r\n  private getGenders() {\r\n    this.commonRequestService.request(RequestEnums.GET_GENDER_LIST).subscribe(res => {\r\n      if (res.errors.length > 0) {\r\n        // error\r\n        return;\r\n      } else if (res.status !== 200 || !Utils.isValidInput(res.data)) {\r\n        // error\r\n        return;\r\n      } else {\r\n        // success\r\n        this.gendersList = res.data;\r\n      }\r\n    });\r\n  }\r\n\r\n  updateUserProfile() {\r\n    this.commonRequestService.request(RequestEnums.UPDATE_USER_PROFILE, this.profileForm.value).subscribe(res => {\r\n      if (res.errors.length > 0) {\r\n        // error\r\n        return;\r\n      } else if (res.status !== 200 || !Utils.isValidInput(res.data)) {\r\n        // error\r\n        return;\r\n      } else {\r\n        // success\r\n        this.commonService.setUserInfo(res.data);\r\n      }\r\n    });\r\n  }\r\n\r\n  profileChange(ev) {\r\n    console.log(ev.target.files);\r\n    const formData = new FormData();\r\n    const files = ev.target.files as Array<File>;\r\n    // tslint:disable-next-line: prefer-for-of\r\n    for (let i = 0; i < files.length; i++) {\r\n      formData.append('files', files[i], files[i].name);\r\n    }\r\n    const headers = new HttpHeaders({'Content-Type':'multipart/form-data'});\r\n    this.commonRequestService.request(RequestEnums.UPLOAD_IMAGE_GET_URL, formData, null, headers).subscribe(res => {\r\n      if (res.errors.length > 0) {\r\n        // error\r\n        return;\r\n      } else if (res.status !== 200 || !Utils.isValidInput(res.data)) {\r\n        // error\r\n        return;\r\n      } else {\r\n        // success\r\n        alert('Updated Successfully');\r\n        this.profileImage = res.data.fileUrl;\r\n        this.profileForm.get('profilePicture').setValue(this.profileImage);\r\n        this.updateUserProfile();\r\n      }\r\n    });\r\n  }\r\n\r\n  imgError() {\r\n    console.log('img error');\r\n    this.profileImage = '/assets/images/profile/default-profile.jpg';\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ProfileRoutingModule } from './profile-routing.module';\r\nimport { ProfileComponent } from './profile.component';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ProfileComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ProfileRoutingModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class ProfileModule { }\r\n"],"sourceRoot":"webpack:///","file":"profile-profile-module-es5.js"}